version: '3'
services:
  mysql-nodeps:
    image: mysql:latest
    entrypoint: ['docker-entrypoint.sh', '--default-authentication-plugin=mysql_native_password']
    restart: always
    volumes:
      - ./database-mysql:/var/lib/mysql:cached
    environment:
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - "${DB_PORT}:3306"
    security_opt:
      - seccomp:unconfined

  redis-nodeps:
    image: redis
    ports:
      - "${REDIS_PORT}:6379"
#
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    hostname: kafka
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    depends_on:
#      - zookeeper
#
#
#  zookeeper:
#    image: wurstmeister/zookeeper
#    hostname: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#        ZOO_MY_ID: 1
#        ZOO_PORT: 2181
#        ZOO_SERVERS: server.1=zookeeper:2888:3888
#    volumes:
#      - ./zk-single-kafka-single/zookeeper/data:/data
#      - ./zk-single-kafka-single/zookeeper/datalog:/datalog

#  kafka-confluentinc:
#    image: confluentinc/cp-kafka:latest
#    hostname: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    volumes:
#      - ./zk-single-kafka-single/kafka/data:/var/lib/kafka/data
#    depends_on:
#      - zookeeper
